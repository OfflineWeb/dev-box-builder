#############################################################################
# The MIT License (MIT)                                                     #
#                                                                           #
# Copyright 2017 papa.                                                      #
#                                                                           #
# Permission is hereby granted, free of charge, to any person obtaining     #
# a copy of this software and associated documentation files  to deal       #
# (the “Software”), in the Software without restriction, including          #
# without limitation the rights to use, copy, modify, merge, publish,       #
# distribute, sublicense, and/or sell copies of the Software, and to permit #
# persons to whom the Software is furnished to do so, subject to the        #
# following conditions:                                                     #
#                                                                           #
# The above copyright notice and this permission notice shall be included   #
# in all copies or substantial portions of the Software.                    #
#                                                                           #
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS   #
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                #
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.    #
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR          #
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  #
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE         #
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                    #
#############################################################################

# this playbook configures kubernetes.
---
- name: Configure kubernetes master
  sudo: True
  hosts: kube-master
  vars_files:
    - ../common/vars.yml
  vars:

  tasks :

    - name: Configure kubectl
      shell: echo "source ({{ usr_local_bin }}/kubectl completion bash)" >> ~/.bashrc

    - name: Initialize kubeadm
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --token={{ kube_token }} --token-ttl=0 --skip-preflight-checks
      register: kube_master_init

    - pause: minutes=5
    - debug: var=kube_master_init

    - name: Create kube config directory
      file: path="/home/{{ ansible_user }}/.kube" state=directory mode=0755 owner={{ ansible_user }} group={{ ansible_user }}

    - name: Copy kubernetes config
      copy: src="/etc/kubernetes/admin.conf" dest="/home/{{ ansible_user }}/.kube/config" mode=0755 owner={{ ansible_user }} group={{ ansible_user }} remote_src=True

    - name: Copy flannel config files on nodes
      copy: src=../files/{{ item }} dest=/tmp/{{ item }} dest="/tmp/{{ item }}" mode=0777 owner={{ ansible_user }}
      with_items: 
      - "kube-flannel-rbac.yml"
      - "kube-flannel.yml"

    - name: Configure flannel
      shell: "{{ usr_local_bin }}/kubectl apply -f /tmp/{{ item }} --validate=false --v=8"
      with_items:
      - "kube-flannel-rbac.yml"
      - "kube-flannel.yml"
      #- "https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel-rbac.yml"
      #- "https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml"


- name: Configure kubernetes nodes
  sudo: True
  hosts: remote!kube-master
  vars_files:
    - ../common/vars.yml
  vars:
    - kube_master_ip: hostvars[groups['kube-master'][0]]['ansible_host']
    - kube_port: 6443

  tasks:
    - name: Add node to kubernetes
      shell: kubeadm join --token {{ kube_token }} {{ kube_master_ip }}:{{ kube_port }} --skip-preflight-checks

    - name: Create kube config directory
      file: path="/home/{{ ansible_user }}/.kube" state=directory mode=0755 owner={{ ansible_user }} group={{ ansible_user }}

    - name: Copy kubernetes config
      copy: src="/etc/kubernetes/admin.conf" dest="/home/{{ ansible_user }}/.kube/config" mode=0755 owner={{ ansible_user }} group={{ ansible_user }}  remote_src=True

    - name: Update bashrc
      shell: echo "export KUBECONFIG=/home/{{ ansible_user }}/.kube/config" >> "/home/{{ ansible_user }}/.bashrc"

    - name: Restart kubelet service
      shell: systemctl restart kubelet

- name: Verify nodes are added
  sudo: True
  hosts: kube-master
  vars_files:
    - ../common/vars.yml
  vars:

  tasks :
    - pause: minutes=1
    
    - name: Allow scheduling pods on master
      shell: "{{ usr_local_bin }}/kubectl taint nodes --all node-role.kubernetes.io/master- "

    - name: Verify master is running 
      shell: "{{ usr_local_bin }}/kubectl get pods --all-namespaces"

    - name: Verify nodes
      shell: "{{ usr_local_bin }}/kubectl get nodes"

    
