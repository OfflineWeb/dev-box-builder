#############################################################################
# The MIT License (MIT)                                                     #
#                                                                           #
# Copyright 2017 papa.                                                      #
#                                                                           #
# Permission is hereby granted, free of charge, to any person obtaining     #
# a copy of this software and associated documentation files  to deal       #
# (the “Software”), in the Software without restriction, including          #
# without limitation the rights to use, copy, modify, merge, publish,       #
# distribute, sublicense, and/or sell copies of the Software, and to permit #
# persons to whom the Software is furnished to do so, subject to the        #
# following conditions:                                                     #
#                                                                           #
# The above copyright notice and this permission notice shall be included   #
# in all copies or substantial portions of the Software.                    #
#                                                                           #
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS   #
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                #
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.    #
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR          #
# ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  #
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE         #
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                    #
#############################################################################

# this playbook installs and configures kubernetes.
---

- name: Install and configure kubernetes
  sudo: True
  hosts: remote
  vars_files:
    - ../common/vars.yml
  vars:

  tasks :
    - stat: path={{ dev_dir}}
      register: dev_dir_exists

    - name: Create a dev repo directory
      file: path={{ dev_dir }} state=directory mode=0755 owner={{ ansible_user }}
      when: dev_dir_exists.stat.isdir is not defined or dev_dir_exists.stat.isdir == False

    - stat: path={{ dev_dir}}/kubernetes
      register: kub_dir_exists

    - name: Download kubernetes
      git: repo='https://github.com/kubernetes/kubernetes' dest="{{ dev_dir }}" clone=no update=yes
      #when: kub_dir_exists.stat.isdir is not defined or kub_dir_exists.stat.isdir == False

    - name: Install kubernetes
      shell: cd "{{ dev_dir }}/kubernetes" && rm -rf .make/ \
              && make clean && make quick-release > {{ dev_dir }}/kubernetes-install.log

    - name: Install kubectl 
      shell:  "curl -LO https://storage.googleapis.com/kubernetes-release/release/\
              $(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"

    - name: Make executable and move to path
      shell: chmod +x ./kubectl && mv ./kubectl "{{ usr_local_bin }}"/kubectl

    - name: Add kubeadm GPG key to system
      apt_key: url=https://packages.cloud.google.com/apt/doc/apt-key.gpg state=present 

    - name: Add kubeadm repo 
      apt_repository: repo="deb http://apt.kubernetes.io/ kubernetes-xenial {{ os_release }} stable"

    - name: Install kubelet and kubeadm
      apt: name={{ item }} update_cache=yes
      with_items: 
      - "kubelet"
      - "kubeadm"

    - stat: path={{ go_path}}/src/flannel
      register: fln_dir_exists

    - name: Download flannel
      git: repo='https://github.com/coreos/flannel.git' dest="{{ go_path }}/src" clone=yes update=yes
      when: fln_dir_exists.stat.isdir is not defined or fln_dir_exists.stat.isdir == False

    - name: Install flannel
      shell: cd "{{ go_path }}/src/flannel" && CGO_ENABLED=1 make dist/flanneld

    - name: Copy flannel config files on nodes
      copy: src=../files/{{ item }} dest=/tmp/{{ item }} state=directory mode=0777 owner={{ ansible_user }}
      with_items: 
      - "kube-flannel-rbac.yml"
      - "kube-flannel.yml"

    - name: Configure flannel
      shell: kubectl apply -f '/tmp/kube-flannel-rbac.yml' -f '/tmp/kube-flannel.yml'

